name: Build

on: ["push", "workflow_dispatch"]

jobs:
  build_main:
    name: Build for ${{ matrix.os_short }}
    runs-on: ${{ matrix.os_version }}

    # skip build on '[ci skip]'
    if: "!contains(github.event.head_commit.message, '[ci skip]')"

    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-x32
        include:
          - os: windows-x32
            os_short: win32
            os_version: windows-latest
            package_ext: zip
            dbg_ext: pdb
            cc: not-used
            cxx: not-used
            vs_arch: x32
            am_arch: x86


    steps:
    - name: Add msbuild to PATH (Windows)
      if: runner.os == 'Windows'
      uses: microsoft/setup-msbuild@v2

    - name: Install (Windows)
      if: runner.os == 'Windows'
      shell: cmd
      run: |
        :: See https://github.com/microsoft/vswhere/wiki/Find-VC
        for /f "usebackq delims=*" %%i in (`vswhere -latest -property installationPath`) do (
          call "%%i"\Common7\Tools\vsdevcmd.bat -arch=${{ matrix.vs_arch }} -host_arch=x64
        )
        
        :: Loop over all environment variables and make them global.
        for /f "delims== tokens=1,2" %%a in ('set') do (
          echo>>"%GITHUB_ENV%" %%a=%%b
        )

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Setup ambuild
      run: |
        python -m pip install --upgrade pip
        python -m pip install wheel
        pip install git+https://github.com/alliedmodders/ambuild

    - name: Fetch FoXBot
      uses: actions/checkout@v4
      with:
        path: foxbot
        submodules: recursive

    - name: Build Files
      shell: bash
      working-directory: foxbot
      run: |
        mkdir post
        cd post
        
        export AM_ARCH=${{ matrix.am_arch }}

        python3 ../configure.py --symbol-files --enable-optimize
        
        ambuild

        copy post\FoXBot.dll addons\foxbot\foxbot.dll
        copy post\FoXBot.pdb addons\foxbot\foxbot.pdb
        Compress-Archive -Path addons\* -Destination addons.zip


    - name: Deploy artifacts
      uses: actions/upload-artifact@v4
      with:
        name: win32
        path: |
          addons.zip

  publish:
    name: 'Publish'
    runs-on: ubuntu-latest
    needs: [build_main]

    steps:
      - name: Deploying windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: win32

      - name: Publish artifacts
        uses: softprops/action-gh-release@v2
        id: publish-job
        if: |
          startsWith(github.ref, 'refs/tags/')
        with:
          files: addons.zip
        env:
          GITHUB_TOKEN: ${{ secrets.API_TOKEN }}
